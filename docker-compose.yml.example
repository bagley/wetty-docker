version: "2.3"

services:

  wetty:
    # built from Dockerfile
    image: mydigitalwalk/wetty:latest
    # image:  wettyoss/wetty
    restart: always
    mem_limit: 300M
    container_name: wetty
#    tty: true
    env_file:
      - .env
    environment:
      SSHHOST: 'wetty-ssh'
      SSHPORT: 22
      NODE_ENV: 'production'
    networks:
      - traefik_proxy
      - default
    volumes:
      - wetty-data:/home/node
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_proxy
      - traefik.http.routers.wetty.rule=Host(`${DOMAINNAME}`)
      - traefik.http.routers.wetty.entrypoints=https
      - traefik.http.routers.wetty.tls=true
      - traefik.http.routers.wetty.service=wetty
      - traefik.http.services.wetty.loadbalancer.server.port=3000
      - traefik.http.services.wetty.loadbalancer.server.scheme=https

#     Add this to wetty if basic auth is wanted
#      - traefik.http.routers.wetty.middlewares=auth,compz,securityheaders,retryagain
#     and add to Traefik:
#      - traefik.http.middlewares.auth.basicauth.users=${HTTP_USERNAME}:${HTTP_PASSWORD}

#     Add this to wetty if basic auth, retrying, and security is wanted is wanted
#      - traefik.http.middlewares.retryagain.retry.attempts=3
#     and add to Traifik:
#      - traefik.http.middlewares.securityheaders.headers.browserXSSFilter=true
#      - traefik.http.middlewares.securityheaders.headers.contentTypeNosniff=true
#      - traefik.http.middlewares.securityheaders.headers.frameDeny=true
#      - traefik.http.middlewares.securityheaders.headers.customFrameOptionsValue=SAMEORIGIN
#      - traefik.http.middlewares.securityheaders.headers.forceSTSHeader=true
#      - traefik.http.middlewares.securityheaders.headers.stsPreload=true
#      - traefik.http.middlewares.securityheaders.headers.stsSeconds=315360000
#      - traefik.http.middlewares.securityheaders.headers.stsIncludeSubdomains=true


#    # If you want to build your own image (remember to pull the wetty submodule):
#    build:
#      context: .
#      dockerfile: Dockerfile
#    image: wetty
#    # Already in the image, but here too in case you'd like to change it
#    healthcheck:
#      test: [ "CMD", "curl", "--fail", "--insecure", "-sS", "https://localhost:3000/${BASEURL}" ]
#      interval: 30s
#      timeout: 20s
#      retries: 3
#      disable: true


  wetty-ssh:
    # built from Dockerfile-ssh
    image: mydigitalwalk/wetty-ssh:latest
    # this is needed so wetty can connect to it
    container_name: 'wetty-ssh'
    restart: always
    mem_limit: 200M
    env_file:
      - env-wetty-ssh
    volumes:
      - wetty_ssh-data:/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - default
#    # If you want to build your own image (remember to pull the wetty submodule):
#    build:
#      context: .
#      dockerfile: Dockerfile-ssh
#    image: wetty-ssh
#    # Image already has this, but you can modify or disable it here.
#    healthcheck:
#      test: [ "CMD", "/healthcheck" ]
#      interval: 30s
#      timeout: 20s
#      retries: 3
#      disable: true

networks:
  traefik_proxy:
    external:
      name: traefik_proxy

volumes:
  wetty-data:
    name: wetty-data
  wetty_ssh-data:
    name: wetty_ssh-data
